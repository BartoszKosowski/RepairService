#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proejkt_BD.Control.Baza
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RSS")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACT_DICT(ACT_DICT instance);
    partial void UpdateACT_DICT(ACT_DICT instance);
    partial void DeleteACT_DICT(ACT_DICT instance);
    partial void InsertACTIVITY(ACTIVITY instance);
    partial void UpdateACTIVITY(ACTIVITY instance);
    partial void DeleteACTIVITY(ACTIVITY instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertOBJ_TYPE(OBJ_TYPE instance);
    partial void UpdateOBJ_TYPE(OBJ_TYPE instance);
    partial void DeleteOBJ_TYPE(OBJ_TYPE instance);
    partial void InsertOBJECT(OBJECT instance);
    partial void UpdateOBJECT(OBJECT instance);
    partial void DeleteOBJECT(OBJECT instance);
    partial void InsertPERSONEL(PERSONEL instance);
    partial void UpdatePERSONEL(PERSONEL instance);
    partial void DeletePERSONEL(PERSONEL instance);
    partial void InsertREQUEST(REQUEST instance);
    partial void UpdateREQUEST(REQUEST instance);
    partial void DeleteREQUEST(REQUEST instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::Proejkt_BD.Properties.Settings.Default.RSSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACT_DICT> ACT_DICT
		{
			get
			{
				return this.GetTable<ACT_DICT>();
			}
		}
		
		public System.Data.Linq.Table<ACTIVITY> ACTIVITY
		{
			get
			{
				return this.GetTable<ACTIVITY>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENT
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<OBJ_TYPE> OBJ_TYPE
		{
			get
			{
				return this.GetTable<OBJ_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<OBJECT> OBJECT
		{
			get
			{
				return this.GetTable<OBJECT>();
			}
		}
		
		public System.Data.Linq.Table<PERSONEL> PERSONEL
		{
			get
			{
				return this.GetTable<PERSONEL>();
			}
		}
		
		public System.Data.Linq.Table<REQUEST> REQUEST
		{
			get
			{
				return this.GetTable<REQUEST>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACT_DICT")]
	public partial class ACT_DICT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _act_type;
		
		private string _act_name;
		
		private EntitySet<ACTIVITY> _ACTIVITY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onact_typeChanging(string value);
    partial void Onact_typeChanged();
    partial void Onact_nameChanging(string value);
    partial void Onact_nameChanged();
    #endregion
		
		public ACT_DICT()
		{
			this._ACTIVITY = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITY), new Action<ACTIVITY>(this.detach_ACTIVITY));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string act_name
		{
			get
			{
				return this._act_name;
			}
			set
			{
				if ((this._act_name != value))
				{
					this.Onact_nameChanging(value);
					this.SendPropertyChanging();
					this._act_name = value;
					this.SendPropertyChanged("act_name");
					this.Onact_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACT_DICT_ACTIVITY", Storage="_ACTIVITY", ThisKey="act_type", OtherKey="act_dict")]
		public EntitySet<ACTIVITY> ACTIVITY
		{
			get
			{
				return this._ACTIVITY;
			}
			set
			{
				this._ACTIVITY.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.ACT_DICT1 = this;
		}
		
		private void detach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.ACT_DICT1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACTIVITY")]
	public partial class ACTIVITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_activity;
		
		private string _description;
		
		private string _result;
		
		private string _status;
		
		private System.DateTime _date_reg;
		
		private System.Nullable<System.DateTime> _date_fn_cn;
		
		private int _id_request;
		
		private System.Nullable<int> _id_personel;
		
		private string _act_dict;
		
		private System.Nullable<int> _sequence_nb;
		
		private EntityRef<ACT_DICT> _ACT_DICT1;
		
		private EntityRef<PERSONEL> _PERSONEL;
		
		private EntityRef<REQUEST> _REQUEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_activityChanging(int value);
    partial void Onid_activityChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Ondate_regChanging(System.DateTime value);
    partial void Ondate_regChanged();
    partial void Ondate_fn_cnChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_fn_cnChanged();
    partial void Onid_requestChanging(int value);
    partial void Onid_requestChanged();
    partial void Onid_personelChanging(System.Nullable<int> value);
    partial void Onid_personelChanged();
    partial void Onact_dictChanging(string value);
    partial void Onact_dictChanged();
    partial void Onsequence_nbChanging(System.Nullable<int> value);
    partial void Onsequence_nbChanged();
    #endregion
		
		public ACTIVITY()
		{
			this._ACT_DICT1 = default(EntityRef<ACT_DICT>);
			this._PERSONEL = default(EntityRef<PERSONEL>);
			this._REQUEST = default(EntityRef<REQUEST>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_activity", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_activity
		{
			get
			{
				return this._id_activity;
			}
			set
			{
				if ((this._id_activity != value))
				{
					this.Onid_activityChanging(value);
					this.SendPropertyChanging();
					this._id_activity = value;
					this.SendPropertyChanged("id_activity");
					this.Onid_activityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="VarChar(50)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_reg", DbType="DateTime NOT NULL")]
		public System.DateTime date_reg
		{
			get
			{
				return this._date_reg;
			}
			set
			{
				if ((this._date_reg != value))
				{
					this.Ondate_regChanging(value);
					this.SendPropertyChanging();
					this._date_reg = value;
					this.SendPropertyChanged("date_reg");
					this.Ondate_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_fn_cn", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_fn_cn
		{
			get
			{
				return this._date_fn_cn;
			}
			set
			{
				if ((this._date_fn_cn != value))
				{
					this.Ondate_fn_cnChanging(value);
					this.SendPropertyChanging();
					this._date_fn_cn = value;
					this.SendPropertyChanged("date_fn_cn");
					this.Ondate_fn_cnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_request", DbType="Int NOT NULL")]
		public int id_request
		{
			get
			{
				return this._id_request;
			}
			set
			{
				if ((this._id_request != value))
				{
					if (this._REQUEST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_requestChanging(value);
					this.SendPropertyChanging();
					this._id_request = value;
					this.SendPropertyChanged("id_request");
					this.Onid_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_personel", DbType="Int")]
		public System.Nullable<int> id_personel
		{
			get
			{
				return this._id_personel;
			}
			set
			{
				if ((this._id_personel != value))
				{
					if (this._PERSONEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personelChanging(value);
					this.SendPropertyChanging();
					this._id_personel = value;
					this.SendPropertyChanged("id_personel");
					this.Onid_personelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_dict", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string act_dict
		{
			get
			{
				return this._act_dict;
			}
			set
			{
				if ((this._act_dict != value))
				{
					if (this._ACT_DICT1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onact_dictChanging(value);
					this.SendPropertyChanging();
					this._act_dict = value;
					this.SendPropertyChanged("act_dict");
					this.Onact_dictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequence_nb", DbType="Int")]
		public System.Nullable<int> sequence_nb
		{
			get
			{
				return this._sequence_nb;
			}
			set
			{
				if ((this._sequence_nb != value))
				{
					this.Onsequence_nbChanging(value);
					this.SendPropertyChanging();
					this._sequence_nb = value;
					this.SendPropertyChanged("sequence_nb");
					this.Onsequence_nbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACT_DICT_ACTIVITY", Storage="_ACT_DICT1", ThisKey="act_dict", OtherKey="act_type", IsForeignKey=true)]
		public ACT_DICT ACT_DICT1
		{
			get
			{
				return this._ACT_DICT1.Entity;
			}
			set
			{
				ACT_DICT previousValue = this._ACT_DICT1.Entity;
				if (((previousValue != value) 
							|| (this._ACT_DICT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACT_DICT1.Entity = null;
						previousValue.ACTIVITY.Remove(this);
					}
					this._ACT_DICT1.Entity = value;
					if ((value != null))
					{
						value.ACTIVITY.Add(this);
						this._act_dict = value.act_type;
					}
					else
					{
						this._act_dict = default(string);
					}
					this.SendPropertyChanged("ACT_DICT1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_ACTIVITY", Storage="_PERSONEL", ThisKey="id_personel", OtherKey="id_personel", IsForeignKey=true)]
		public PERSONEL PERSONEL
		{
			get
			{
				return this._PERSONEL.Entity;
			}
			set
			{
				PERSONEL previousValue = this._PERSONEL.Entity;
				if (((previousValue != value) 
							|| (this._PERSONEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONEL.Entity = null;
						previousValue.ACTIVITY.Remove(this);
					}
					this._PERSONEL.Entity = value;
					if ((value != null))
					{
						value.ACTIVITY.Add(this);
						this._id_personel = value.id_personel;
					}
					else
					{
						this._id_personel = default(Nullable<int>);
					}
					this.SendPropertyChanged("PERSONEL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ACTIVITY", Storage="_REQUEST", ThisKey="id_request", OtherKey="id_request", IsForeignKey=true)]
		public REQUEST REQUEST
		{
			get
			{
				return this._REQUEST.Entity;
			}
			set
			{
				REQUEST previousValue = this._REQUEST.Entity;
				if (((previousValue != value) 
							|| (this._REQUEST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._REQUEST.Entity = null;
						previousValue.ACTIVITY.Remove(this);
					}
					this._REQUEST.Entity = value;
					if ((value != null))
					{
						value.ACTIVITY.Add(this);
						this._id_request = value.id_request;
					}
					else
					{
						this._id_request = default(int);
					}
					this.SendPropertyChanged("REQUEST");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_client;
		
		private string _name;
		
		private string _first_name;
		
		private string _last_name;
		
		private System.Nullable<int> _tel;
		
		private EntitySet<OBJECT> _OBJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_clientChanging(int value);
    partial void Onid_clientChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OntelChanging(System.Nullable<int> value);
    partial void OntelChanged();
    #endregion
		
		public CLIENT()
		{
			this._OBJECT = new EntitySet<OBJECT>(new Action<OBJECT>(this.attach_OBJECT), new Action<OBJECT>(this.detach_OBJECT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="Int")]
		public System.Nullable<int> tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OBJECT", Storage="_OBJECT", ThisKey="id_client", OtherKey="id_client")]
		public EntitySet<OBJECT> OBJECT
		{
			get
			{
				return this._OBJECT;
			}
			set
			{
				this._OBJECT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJ_TYPE")]
	public partial class OBJ_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _type;
		
		private string _name;
		
		private EntitySet<OBJECT> _OBJECT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public OBJ_TYPE()
		{
			this._OBJECT = new EntitySet<OBJECT>(new Action<OBJECT>(this.attach_OBJECT), new Action<OBJECT>(this.detach_OBJECT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJ_TYPE_OBJECT", Storage="_OBJECT", ThisKey="type", OtherKey="obj_type")]
		public EntitySet<OBJECT> OBJECT
		{
			get
			{
				return this._OBJECT;
			}
			set
			{
				this._OBJECT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.OBJ_TYPE1 = this;
		}
		
		private void detach_OBJECT(OBJECT entity)
		{
			this.SendPropertyChanging();
			entity.OBJ_TYPE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OBJECT")]
	public partial class OBJECT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nr_object;
		
		private string _name;
		
		private int _id_client;
		
		private string _obj_type;
		
		private EntitySet<REQUEST> _REQUEST;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<OBJ_TYPE> _OBJ_TYPE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnr_objectChanging(string value);
    partial void Onnr_objectChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_clientChanging(int value);
    partial void Onid_clientChanged();
    partial void Onobj_typeChanging(string value);
    partial void Onobj_typeChanged();
    #endregion
		
		public OBJECT()
		{
			this._REQUEST = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUEST), new Action<REQUEST>(this.detach_REQUEST));
			this._CLIENT = default(EntityRef<CLIENT>);
			this._OBJ_TYPE1 = default(EntityRef<OBJ_TYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_object", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nr_object
		{
			get
			{
				return this._nr_object;
			}
			set
			{
				if ((this._nr_object != value))
				{
					this.Onnr_objectChanging(value);
					this.SendPropertyChanging();
					this._nr_object = value;
					this.SendPropertyChanged("nr_object");
					this.Onnr_objectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_client", DbType="Int NOT NULL")]
		public int id_client
		{
			get
			{
				return this._id_client;
			}
			set
			{
				if ((this._id_client != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clientChanging(value);
					this.SendPropertyChanging();
					this._id_client = value;
					this.SendPropertyChanged("id_client");
					this.Onid_clientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obj_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string obj_type
		{
			get
			{
				return this._obj_type;
			}
			set
			{
				if ((this._obj_type != value))
				{
					if (this._OBJ_TYPE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onobj_typeChanging(value);
					this.SendPropertyChanging();
					this._obj_type = value;
					this.SendPropertyChanged("obj_type");
					this.Onobj_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECT_REQUEST", Storage="_REQUEST", ThisKey="nr_object", OtherKey="nr_object")]
		public EntitySet<REQUEST> REQUEST
		{
			get
			{
				return this._REQUEST;
			}
			set
			{
				this._REQUEST.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OBJECT", Storage="_CLIENT", ThisKey="id_client", OtherKey="id_client", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.OBJECT.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.OBJECT.Add(this);
						this._id_client = value.id_client;
					}
					else
					{
						this._id_client = default(int);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJ_TYPE_OBJECT", Storage="_OBJ_TYPE1", ThisKey="obj_type", OtherKey="type", IsForeignKey=true)]
		public OBJ_TYPE OBJ_TYPE1
		{
			get
			{
				return this._OBJ_TYPE1.Entity;
			}
			set
			{
				OBJ_TYPE previousValue = this._OBJ_TYPE1.Entity;
				if (((previousValue != value) 
							|| (this._OBJ_TYPE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJ_TYPE1.Entity = null;
						previousValue.OBJECT.Remove(this);
					}
					this._OBJ_TYPE1.Entity = value;
					if ((value != null))
					{
						value.OBJECT.Add(this);
						this._obj_type = value.type;
					}
					else
					{
						this._obj_type = default(string);
					}
					this.SendPropertyChanged("OBJ_TYPE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.OBJECT = this;
		}
		
		private void detach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.OBJECT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONEL")]
	public partial class PERSONEL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_personel;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _role;
		
		private string _active;
		
		private string _login;
		
		private string _password;
		
		private EntitySet<ACTIVITY> _ACTIVITY;
		
		private EntitySet<REQUEST> _REQUEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personelChanging(int value);
    partial void Onid_personelChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnactiveChanging(string value);
    partial void OnactiveChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public PERSONEL()
		{
			this._ACTIVITY = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITY), new Action<ACTIVITY>(this.detach_ACTIVITY));
			this._REQUEST = new EntitySet<REQUEST>(new Action<REQUEST>(this.attach_REQUEST), new Action<REQUEST>(this.detach_REQUEST));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_personel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_personel
		{
			get
			{
				return this._id_personel;
			}
			set
			{
				if ((this._id_personel != value))
				{
					this.Onid_personelChanging(value);
					this.SendPropertyChanging();
					this._id_personel = value;
					this.SendPropertyChanged("id_personel");
					this.Onid_personelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_ACTIVITY", Storage="_ACTIVITY", ThisKey="id_personel", OtherKey="id_personel")]
		public EntitySet<ACTIVITY> ACTIVITY
		{
			get
			{
				return this._ACTIVITY;
			}
			set
			{
				this._ACTIVITY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_REQUEST", Storage="_REQUEST", ThisKey="id_personel", OtherKey="id_personel")]
		public EntitySet<REQUEST> REQUEST
		{
			get
			{
				return this._REQUEST;
			}
			set
			{
				this._REQUEST.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = this;
		}
		
		private void detach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = null;
		}
		
		private void attach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = this;
		}
		
		private void detach_REQUEST(REQUEST entity)
		{
			this.SendPropertyChanging();
			entity.PERSONEL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REQUEST")]
	public partial class REQUEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_request;
		
		private string _description;
		
		private string _status;
		
		private string _result;
		
		private System.DateTime _date_reg;
		
		private System.Nullable<System.DateTime> _date_fn_cn;
		
		private int _id_personel;
		
		private string _nr_object;
		
		private EntitySet<ACTIVITY> _ACTIVITY;
		
		private EntityRef<OBJECT> _OBJECT;
		
		private EntityRef<PERSONEL> _PERSONEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_requestChanging(int value);
    partial void Onid_requestChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnresultChanging(string value);
    partial void OnresultChanged();
    partial void Ondate_regChanging(System.DateTime value);
    partial void Ondate_regChanged();
    partial void Ondate_fn_cnChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_fn_cnChanged();
    partial void Onid_personelChanging(int value);
    partial void Onid_personelChanged();
    partial void Onnr_objectChanging(string value);
    partial void Onnr_objectChanged();
    #endregion
		
		public REQUEST()
		{
			this._ACTIVITY = new EntitySet<ACTIVITY>(new Action<ACTIVITY>(this.attach_ACTIVITY), new Action<ACTIVITY>(this.detach_ACTIVITY));
			this._OBJECT = default(EntityRef<OBJECT>);
			this._PERSONEL = default(EntityRef<PERSONEL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_request", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_request
		{
			get
			{
				return this._id_request;
			}
			set
			{
				if ((this._id_request != value))
				{
					this.Onid_requestChanging(value);
					this.SendPropertyChanging();
					this._id_request = value;
					this.SendPropertyChanged("id_request");
					this.Onid_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result", DbType="NVarChar(50)")]
		public string result
		{
			get
			{
				return this._result;
			}
			set
			{
				if ((this._result != value))
				{
					this.OnresultChanging(value);
					this.SendPropertyChanging();
					this._result = value;
					this.SendPropertyChanged("result");
					this.OnresultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_reg", DbType="DateTime NOT NULL")]
		public System.DateTime date_reg
		{
			get
			{
				return this._date_reg;
			}
			set
			{
				if ((this._date_reg != value))
				{
					this.Ondate_regChanging(value);
					this.SendPropertyChanging();
					this._date_reg = value;
					this.SendPropertyChanged("date_reg");
					this.Ondate_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_fn_cn", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_fn_cn
		{
			get
			{
				return this._date_fn_cn;
			}
			set
			{
				if ((this._date_fn_cn != value))
				{
					this.Ondate_fn_cnChanging(value);
					this.SendPropertyChanging();
					this._date_fn_cn = value;
					this.SendPropertyChanged("date_fn_cn");
					this.Ondate_fn_cnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_personel", DbType="Int NOT NULL")]
		public int id_personel
		{
			get
			{
				return this._id_personel;
			}
			set
			{
				if ((this._id_personel != value))
				{
					if (this._PERSONEL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personelChanging(value);
					this.SendPropertyChanging();
					this._id_personel = value;
					this.SendPropertyChanged("id_personel");
					this.Onid_personelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_object", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nr_object
		{
			get
			{
				return this._nr_object;
			}
			set
			{
				if ((this._nr_object != value))
				{
					if (this._OBJECT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnr_objectChanging(value);
					this.SendPropertyChanging();
					this._nr_object = value;
					this.SendPropertyChanged("nr_object");
					this.Onnr_objectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REQUEST_ACTIVITY", Storage="_ACTIVITY", ThisKey="id_request", OtherKey="id_request")]
		public EntitySet<ACTIVITY> ACTIVITY
		{
			get
			{
				return this._ACTIVITY;
			}
			set
			{
				this._ACTIVITY.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OBJECT_REQUEST", Storage="_OBJECT", ThisKey="nr_object", OtherKey="nr_object", IsForeignKey=true)]
		public OBJECT OBJECT
		{
			get
			{
				return this._OBJECT.Entity;
			}
			set
			{
				OBJECT previousValue = this._OBJECT.Entity;
				if (((previousValue != value) 
							|| (this._OBJECT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OBJECT.Entity = null;
						previousValue.REQUEST.Remove(this);
					}
					this._OBJECT.Entity = value;
					if ((value != null))
					{
						value.REQUEST.Add(this);
						this._nr_object = value.nr_object;
					}
					else
					{
						this._nr_object = default(string);
					}
					this.SendPropertyChanged("OBJECT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONEL_REQUEST", Storage="_PERSONEL", ThisKey="id_personel", OtherKey="id_personel", IsForeignKey=true)]
		public PERSONEL PERSONEL
		{
			get
			{
				return this._PERSONEL.Entity;
			}
			set
			{
				PERSONEL previousValue = this._PERSONEL.Entity;
				if (((previousValue != value) 
							|| (this._PERSONEL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONEL.Entity = null;
						previousValue.REQUEST.Remove(this);
					}
					this._PERSONEL.Entity = value;
					if ((value != null))
					{
						value.REQUEST.Add(this);
						this._id_personel = value.id_personel;
					}
					else
					{
						this._id_personel = default(int);
					}
					this.SendPropertyChanged("PERSONEL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = this;
		}
		
		private void detach_ACTIVITY(ACTIVITY entity)
		{
			this.SendPropertyChanging();
			entity.REQUEST = null;
		}
	}
}
#pragma warning restore 1591
